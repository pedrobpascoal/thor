<?xml version="1.0" ?>

<!-- Configuration of the Ant build system to generate a Jar file --> 
<project basedir="." name="thor" default="create jar" >
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6" />
    <property name="source" value="1.6" />
	
	<property name="manifest.main.class" value="" />
	<property name="manifest.version.number" value="1" />
	<property name="manifest.build.number" value="0" />
	<property name="manifest.created.by" value="Pedro B. Pascoal" />

	<property name="src.dir" value="src/" />
	<property name="lib.dir" value="lib/" />
	<property name="doc.dir" value="../../doc/" />
	<property name="build.dir" value="bin/" />

	<property name="package.file" value="thor-core-${manifest.version.number}.${manifest.build.number}.jar" />
	
	<tstamp/><!-- needed for TODAY -->

	<!-- Add all projects that should receive the new jar package when built -->
	<path id="package.subscribers">
	</path>

    <path id="thor.classpath">
        <pathelement location="bin"/>
    </path>
	<!-- Create classpath (build.classpath) from all the jar files in my lib directory -->
	<path id="build.classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>
	
	<target name="init">
		<mkdir dir="bin"/>
		<copy includeemptydirs="false" todir="bin">
			<fileset dir="src">
				<exclude name="**/*.launch"/>
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
	</target>

	<target name="clean">
		<delete dir="${build.dir}" />
	</target>
	
	<target name="build" depends="init" >
		<mkdir dir="${build.dir}" />
		<javac debug="true" debuglevel="${debuglevel}" destdir="${build.dir}" includeantruntime="false" source="${source}" target="${target}" >
			<src path="${src.dir}"/>
            <classpath refid="thor.classpath"/>
            <classpath refid="build.classpath"/>
        </javac>
	</target>
	
	<!-- Create a jar for the project -->
	<target name="create jar" depends="clean,init,build" description="Create a jar for the MV-CBIR project">
		<delete file="${package.file}" failonerror="true"/>
		
		<!-- convert lib.list to build.classpath (the string needed for the manifest task) -->
		<pathconvert property="manifest.classpath" pathsep=" ">
			<path refid="build.classpath" />
			<flattenmapper />
		</pathconvert>
		
		<!-- create the jar file -->
		<jar basedir="${build.dir}" destfile="${package.file}" includes="**\*.class" excludes="**/*Test*" >
			
			<!-- now build the manifest file, using manifest.classpath -->
			<manifest>
				<attribute name="Manifest-Version" value="${manifest.version.number}.${manifest.build.number}" />
				<attribute name="Built-Date" value="${TODAY}" />
			    <attribute name="Created-By" value="${manifest.created.by}"/>
				<attribute name="Sealed" value="false" />
				<attribute name="Main-Class" value="${manifest.main.class}" />
				<attribute name="Class-Path" value="${manifest.classpath}" />
			</manifest>
		</jar>
		<!-- update the jar in all project that have the project as dependency -->
		<copy file="${package.file}" todir="../" overwrite="true" />
		<copy file="${package.file}" todir="../view/lib/" overwrite="true" />
		<copy file="${package.file}" todir="../../thor-demos/modelviewer/lib/" overwrite="true" />
		<copy file="${package.file}" todir="../test/lib/" overwrite="true" />
		<copy file="${package.file}" todir="../proj/lib/" overwrite="true" />
	</target>

	<!-- Create a jar package for the project containing all dependencies *.jar present in the lib/ folder -->
	<target name="create jar w/dependencies" depends="clean,init,build" description="Create a jar for the MV-CBIR project">
		<delete file="${package.file}" failonerror="true"/>
		<!-- convert lib.list to build.classpath (the string needed for the manifest task) -->
		<pathconvert property="manifest.classpath" pathsep=" ">
			<path refid="build.classpath" />
			<flattenmapper />
		</pathconvert>
		<!-- create the jar file -->
		<jar basedir="${build.dir}" destfile="${package.file}" includes="**\*.class" excludes="**/*Test*" >
			<!-- now build the manifest file, using manifest.classpath -->
			<manifest>
				<attribute name="Manifest-Version" value="${manifest.version.number}.${manifest.build.number}" />
				<attribute name="Built-Date" value="${TODAY}" />
			    <attribute name="Created-By" value="${manifest.created.by}"/>
				<attribute name="Sealed" value="true" />
				<attribute name="Main-Class" value="${manifest.main.class}" />
				<attribute name="Class-Path" value="${manifest.classpath}" />
			</manifest>
			<fileset dir="${lib.dir}" includes="**/*.jar" />
		</jar>
	</target>
	
	<target name="doc" depends="init" description="generate documentation">
		<delete dir="${doc.dir}" />
		<javadoc sourcepath="${src.dir}" destdir="${doc.dir}"/>
	</target>
</project>